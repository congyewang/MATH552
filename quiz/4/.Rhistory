x
hist(x)
order(x)
sort(x)
x <- rnorm(1001)
x_r <- sort(x)
quantile(x <- rnorm(1001))
x[length(x) * 0.25]
x[which(-0.71682796)]
mean(x)
x_r[length(x) * 0.25]
x_r[length(x) * 0.5]
library(tidyverse)
setwd("~/R/MATH551/Quiz/Quiz4/")
load("../M551Quiz2018.Rdata")
source("../hessian.R")
caterpillar_ll <- function(theta,datavec){
lambda=theta[1]; p=theta[2]
n=length(datavec)
lli=n*lambda*log(p)
ll2=sum(datavec*log(1-p))
ll3=sum(lfactorial(datavec+lambda-1)-lfactorial(datavec)-lfactorial(lambda-1))
return(lli+ll2+ll3)
}
caterpillar_ll(c(4,0.25), caterpillars)
caterpillar_ll(c(3,0.5), caterpillars)
caterpillar_proflik <- function(lambda,datavec){
n=length(datavec)
s1=sum(datavec)
phat=n*lambda/(n*lambda+s1)
return(caterpillar_ll(c(lambda,phat),datavec))
}
caterpillar_negproflik <- function(lambda, datavec){
n=length(datavec)
s1=sum(datavec)
phat=n*lambda/(n*lambda+s1)
z = (caterpillar_ll(c(lambda,phat),datavec))
return(-z)
}
optim_caterpillar_negproflik <- optim(1, caterpillar_negproflik, method = "Brent", lower = 0.2, upper = 200, hessian = TRUE, data = caterpillars)
print(c(optim_caterpillar_negproflik$par, -optim_caterpillar_negproflik$value))## because it is a negative likelihood I add a -
# prints maximum value of regular log  (MLE for log likelihood should be negative)
nboot=5000 # sample (5000 bootstraps)
parBSc <- matrix(0,nrow=nboot,ncol=1)
n <- length(caterpillars) # number of data in actual dataset
for (i in 1:nboot){ # each of the 5000 times we do the following
dataBSc <- sample(caterpillars,n,replace=T) # sample a new vector with 200 caterpillars from the original vector
# (the actual data), size n (200), with replacement
fit <- optim_caterpillar_negproflik <- optim(1, caterpillar_negproflik, method = "Brent", lower = 0.2, upper = 200, data = dataBSc)
parBSc[i,] <- fit$par
}
hist(parBSc)
CIs=apply(parBSc,2,quantile,c(0.025,0.975))
CIs
nboot=5000 # sample (5000 bootstraps)
parBScpara <- matrix(0,nrow=nboot,ncol=1)
n <- length(caterpillars) # number of data in actual dataset
for (i in 1:nboot){ # each of the 5000 times we do the following
dataBScpara <- rnbinom(n,5.029,0.793) # sample a new vector with 200 caterpillars from the original vector
# (the actual data), size n (200), with replacement
fit <- optim_caterpillar_negproflik <- optim(1, caterpillar_negproflik, method = "Brent", lower = 0.2, upper = 200, data = dataBScpara)
parBScpara[i,] <- fit$par
}
hist(parBScpara)
CIspara=apply(parBScpara,2,quantile,c(0.025,0.975))
CIspara
setwd("~/R/MATH552/quiz/4")
library(tidyverse)
library(lmtest)
setwd("~/R/MATH552/quiz/4")
library(tidyverse)
library(lmtest)
setwd("~/R/MATH552/quiz/4")
df_4 <- read.csv("data4.csv", header = T)
df_4$Deaths_Rate <- df_4$Deaths / df_4$N
df_4_A <- df_4
df_4_B <- df_4
df_4_B$Exposure <- factor(df_4_B$Exposure)
df_4_B$Rel.Hum <- factor(df_4_B$Rel.Hum)
df_4_B$Temp <- factor(df_4_B$Temp)
fit_4_A <- glm(Deaths_Rate ~ Species + Exposure + Rel.Hum + Temp, family = binomial(link = "logit"), data = df_4_A)
summary.glm(fit_4_A)
fit_4_B <- glm(Deaths_Rate ~ Species + Exposure + Rel.Hum + Temp, family = binomial(link = "logit"), data = df_4_B)
summary.glm(fit_4_B)
anova_fit_4_A_fit_4_B <- anova(fit_4_A, fit_4_B)
# anova_fit_4_A_fit_4_B
likelihood_ratio <- lrtest(fit_4_A, fit_4_B)
likelihood_ratio
anova_fit_4_A_fit_4_B <- anova(fit_4_A, fit_4_B, test = "Chisq")
# anova_fit_4_A_fit_4_B
likelihood_ratio <- lrtest(fit_4_A, fit_4_B)
likelihood_ratio
anova_fit_4_A_fit_4_B <- anova(fit_4_A, fit_4_B, test = "Chisq")
anova_fit_4_A_fit_4_B
likelihood_ratio <- lrtest(fit_4_A, fit_4_B)
likelihood_ratio
anova_fit_4_A_fit_4_B <- anova(fit_4_A, fit_4_B, test = "Chisq")
anova_fit_4_A_fit_4_B
likelihood_ratio <- lrtest(fit_4_A, fit_4_B)
likelihood_ratio
df_3 <- read.csv("data3.csv", header = T)
df_3$type <- factor(df_3$type)
df_3$year <- factor(df_3$year)
df_3$period <- factor(df_3$period)
fit_3 <- glm(incidents ~ service + type + year + period, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
typeB / typeE
fit_3_1 <- glm(incidents ~ service + type, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), abs))
typeB_1 / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], abs))
typeB_1 / type_Total_1_no_intercept
library(tidyverse)
library(lmtest)
setwd("~/R/MATH552/quiz/4")
df_3 <- read.csv("data3.csv", header = T)
df_3$type <- factor(df_3$type)
df_3$year <- factor(df_3$year)
df_3$period <- factor(df_3$period)
fit_3 <- glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE )
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE )
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE )
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE )
typeB
exp(typeB)
typeE
exp(typeE )
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
typeB / typeE
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
typeB / typeE
typeB
typeE
fit_3 <- glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3_1 <- glm(incidents ~ service + type, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), abs))
typeB_1 / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], abs))
typeB_1 / type_Total_1_no_intercept
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
dummies
install.packages("dummies")
library(tidyverse)
library(lmtest)
library(dummies)
setwd("~/R/MATH552/quiz/4")
dummy(df_3$type)
type_mat <- dummy(df_3$type)
type_mat <- dummy(df_3$type)
type_mat
type_mat <- dummy(df_3$type)
type_mat
type_mat <- dummy(df_3$type)
type_mat["typeB"]
type_mat <- dummy(df_3$type)
type_mat
class(type_mat)
type_mat <- dummy(df_3$type)
type_mat[1]
type_mat <- dummy(df_3$type)
type_mat[[1]]
type_mat <- dummy(df_3$type)
type_mat
type_mat <- dummy(df_3$type)
as.data.frame(type_mat)
type_mat <- dummy(df_3$type)
names(as.data.frame(type_mat))
type_mat <- dummy(df_3$type)
as.data.frame(type_mat)
class(type_mat)
type_mat <- dummy(df_3$type)
as.data.frame(type_mat)
type_mat$typeA
df_3$type
dummy(df_3$type)
length(df_3)
length(df_3$type)
type_mat <- dummy(df_3$type)
as.matrix(type_mat)
type_mat
type_mat <- dummy(df_3$type)
as.matrix(type_mat)
type_mat[1,]
type_mat <- dummy(df_3$type)
as.matrix(type_mat)
type_mat[,1]
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_mat[,1]
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_mat[,2]
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
type_mat
type_E
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
fit_4_2 <- glm(df_3$incidents ~ service + type_B + type_E + year + period, weights = service, family = poisson(link = "log"))
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
fit_4_2 <- glm(df_3$incidents ~ df_3$service + type_B + type_E + df_3$year + df_3$period, weights = df_3$service, family = poisson(link = "log"))
summary.glm(fit_4_2)
typeB_3 <- as.double(coef(fit_3_2)["typeB"])
typeB_3 <- as.double(coef(fit_4_2)["typeB"])
typeE_3 <- as.double(coef(fit_4_2)["typeE"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_4_2)["typeB"])
typeE_3 <- as.double(coef(fit_4_2)["typeE"])
exp(typeB_3)
typeB_3 <- as.double(coef(fit_4_2)["typeB"])
typeE_3 <- as.double(coef(fit_4_2)["typeE"])
type_B
typeB_3 <- as.double(coef(fit_4_2)["typeB"])
typeE_3 <- as.double(coef(fit_4_2)["typeE"])
typeB_3
typeB_3 <- as.double(coef(fit_4_2)["typeB"])
typeE_3 <- as.double(coef(fit_4_2)["typeE"])
coef(fit_4_2)["typeB"]
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
fit_3_2 <- glm(df_3$incidents ~ df_3$service + type_B + type_E + df_3$year + df_3$period, weights = df_3$service, family = poisson(link = "log"))
summary.glm(fit_3_2)
fit_3_2
coef(fit_3_2)
coef(fit_3_2)["type_B"]
as.double(coef(fit_3_2)["type_B"])
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["typeE"])
coef(fit_4_2)["typeB"]
as.double(coef(fit_3_2)["type_B"])
typeB_3
exp(typeB_3)
typeE_3
typeE_3 <- as.double(coef(fit_3_2)["typeE"])
typeE_3
as.double(coef(fit_3_2)["typeE"])
coef(fit_3_2)["typeE"]
coef(fit_3_2)
coef(fit_3_2)["typeE"]
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
dummy(df_3$type)
df_3 %>% filter(year == 65)
df_3 %>% filter(year == 65, period == 75)
df_3 %>% filter(year == 65, period == 70)
summary(df_3)
df_3 %>% filter(year == 12 & period == 25)
df_3 %>% filter(year == 65 & period == 75)
df_3 %>% filter(year == 65 & period == 60)
df_3 %>% filter(year == 60 & period == 60)
df_3 %>% filter(year == 65 & period == 60)
df_3 %>% filter(year == 70 & period == 60)
df_3 %>% filter(year == 75 & period == 60)
df_3 %>% filter(year == 60 & period == 60)
df_3 %>% filter(incidents == 0)
df_3 %>% filter(year == 60 & period == 60)
df_3 %>% filter(year == 75 & period == 60)
df_3 %>% filter(year == 70 & period == 60)
df_3 %>% filter(year == 65 & period == 60)
df_3 %>%
filter(year == 65 & period == 60) %>%
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"))
df_3 %>%
filter(year == 65 & period == 60) %>%
glm(formula = incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"))
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(formula = incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
df_3_sub
df_3_sub <- filter(df_3, year == 65 & period == 60)
glm(incidents ~ service + type + year + period, weights = service, family = poisson(link = "log"), data = df_3_sub)
fit_3_1 <- glm(incidents ~ service + type, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), abs))
typeB_1 / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], abs))
typeB_1 / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
exp(typeB_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), abs))
exp(typeB_1) / exp(type_Total_1_intercept)
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], abs))
exp(typeB_1) / exp(type_Total_1_no_intercept)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
install.packages("multcomp")
help(multcomp)
??multcomp
help(glht)
library(tidyverse)
library(lmtest)
library(dummies)
library(multcomp)
setwd("~/R/MATH552/quiz/4")
library(multcomp)
help(glht)
lmod <- lm(Fertility ~ ., data = swiss)
lmod
summary(lmod)
K <- diag(length(coef(lmod)))[-1,]
K
diag(length(coef(lmod)))
length(coef(lmod))
rownames(K) <- names(coef(lmod))[-1]
K
glht(lmod, linfct = K)
glht(lmod, linfct = c("Agriculture = 0",
"Examination = 0",
"Education = 0",
"Catholic = 0",
"Infant.Mortality = 0"))
amod <- aov(breaks ~ tension, data = warpbreaks)
glht(amod, linfct = mcp(tension = "Tukey"))
glht(amod, linfct = mcp(tension = c("M - L = 0",
"H - L = 0",
"H - M = 0")))
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
fit_3_1 <- glm(incidents ~ type + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
fit_3_2 <- glm(df_3$incidents ~ type_B + type_E + df_3$year + df_3$period, weights = df_3$service, family = poisson(link = "log"))
summary.glm(fit_3_2)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
typeE_3 <- as.double(coef(fit_3_2)["type_E"])
exp(typeB_3) / exp(typeE_3)
glht(fit_3, linefct = mcp(type = "Tukey"))
fit_3_1 <- glm(incidents ~ type + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
fit_3_1 <- glm(incidents ~ type, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
type_mat <- dummy(df_3$type)
# as.matrix(type_mat)
type_B <- type_mat[,2]
type_E <- type_mat[,5]
fit_3_2 <- glm(df_3$incidents ~ type_B + type_E + df_3$year + df_3$period, weights = df_3$service, family = poisson(link = "log"))
summary.glm(fit_3_2)
library(tidyverse)
library(lmtest)
library(dummies)
library(multcomp)
setwd("~/R/MATH552/quiz/4")
df_3 <- read.csv("data3.csv", header = T)
df_3$type <- factor(df_3$type)
df_3$year <- factor(df_3$year)
df_3$period <- factor(df_3$period)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
fit_3 <- glm(incidents ~ type + year + period, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB <- as.double(coef(fit_3)["typeB"])
typeE <- as.double(coef(fit_3)["typeE"])
exp(typeB) / exp(typeE)
typeB_3 <- as.double(coef(fit_3_2)["type_B"])
fit_3_1 <- glm(incidents ~ type, weights = service, family = poisson(link = "log"), data = df_3)
summary.glm(fit_3_1)
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
typeB_1 <- abs(as.double(coef(fit_3_1)["typeB"]))
type_Total_1_intercept <- sum(sapply(coef(fit_3_1), exp))
exp(typeB_1) / type_Total_1_intercept
type_Total_1_no_intercept <- sum(sapply(coef(fit_3_1)[-1], exp))
exp(typeB_1) / type_Total_1_no_intercept
